setwd("~/")
setwd("~/")
source('~/bank.R', encoding = 'UTF-8')
source('~/bank.R', encoding = 'UTF-8')
setwd("~/")
setwd("~/")
setwd("~/")
setwd("~/mc")
source('~/mc/bank.R')
data <- read.csv("bank-full.csv", header = T, sep = ";")
source('~/mc/bank.R')
source('~/mc/bank.R')
setwd("C:\Users\tatiana\Documents\mc")
setwd("C:/Users/tatiana/Documents/mc")
data <- read.csv("bank-full.csv", header = T, sep = ";")
data <- read.csv(".bank-full.csv", header = T, sep = ";")
data <- read.csv("./bank-full.csv", header = T, sep = ";")
setwd("~/mc")
source('~/mc/bank.R')
source('~/mc/bank.R')
data <- read.csv("bank-full.csv", header = T, sep = ";")
data <- read.csv("bank-full.csv", header = T, sep = ";")
setwd("C:/Users/tatiana/Documents/mc")
data <- read.csv("bank-full.csv", header = T, sep = ";")
setwd("C:/Users/tatiana/Documents")
data <- read.csv("bank-full.csv", header = T, sep = ";")
source('~/mc/bank.R')
source('~/mc/bank.R')
data <- read.csv("bank-full.csv", header = T, sep = ";")
source('~/mc/bank.R')
setwd("~/")
data_2012 <- read.csv(file = "data/NIJ2012_MAR01_DEC31.csv", header = T, sep = ";", stringsAsFactors = F)
data_2013 <- read.csv(file = "data/NIJ2013_JAN01_DEC31.csv", header = T, sep = ";", stringsAsFactors = F)
data_2014 <- read.csv(file = "data/NIJ2014_JAN01_DEC31.csv", header = T, sep = ";", stringsAsFactors = F)
data_2015 <- read.csv(file = "data/NIJ2015_JAN01_DEC31.csv", header = T, sep = ";", stringsAsFactors = F)
View(data_2015)
View(data_2014)
View(data_2013)
View(data_2012)
plot(data_2014)
library(devtools)
if(!require(devtools)){
install.packages("devtools")
}
library(devtools)
install_github("ujjwalkarn/xda")
?xda
library(xda)
?xda
??xda
numSummary(iris)
numSummary(iris)
data_2012_2015 <- read.csv(file = "data/data_2012-2015.csv", header = T, sep = ";", stringsAsFactors = F)
numSummary(data_2012_2015)
charSummary(data_2012_2015)
View(data_2012_2015)
bivariate(data_2012_2015,'CATEGORY','occ_date')
file_name <- "bi_category-occ_date.txt"
file_name <- paste(type, file_name)
bivariate(data_2012_2015,'CATEGORY','occ_date')
capture.output(s, file = file_name)
s <- bivariate(data_2012_2015,'CATEGORY','occ_date')
capture.output(s, file = file_name)
Plot(data_2012_2015,'CATEGORY')
Plot(data_2012_2015,'occ_date')
Plot(data_2012_2015,'CATEGORY')
Plot(data_2012_2015,'x_cordinate')
Plot(data_2012_2015,'x_coordinate')
Plot(mtcars,'mpg')
Plot(iris,'Species')
iris
Plot(iris,'Sepal.Length')
?plot
plot(data_2012_2015)
plot(data_2012_2015$CATEGORY)
boxplot(mtcars$mpg)
mtcars <- edit(mtcars)
boxplot(mtcars$mpg)
IQR(mtcars$mpg)
library(dplyr)
install.packages("dplyr", dependencies = T)
library(dplyr)
install.packages("dplyr", dependencies = T)
library(dplyr)
library(dplyr)
data <- read.csv("taxas.csv", header = T, stringsAsFactors = F, encoding = "UTF-8")
setwd("~/")
data <- read.csv("taxas.csv", header = T, stringsAsFactors = F, encoding = "UTF-8")
setwd("~/")
data <- read.csv("taxas.csv", header = T, stringsAsFactors = F, encoding = "UTF-8")
View(data)
library(dplyr)
library(jsonlite)
municipios_esgoto_agua_hist <- read.csv("../arcgis/populacao_agua_esgoto_hist.csv", header = T, encoding = "UTF-8", stringsAsFactors = F, sep = ";")
setwd("C:/Users/tatiana/valei-me-sao-francisco/scripts")
municipios_esgoto_agua_hist <- read.csv("../arcgis/populacao_agua_esgoto_hist.csv", header = T, encoding = "UTF-8", stringsAsFactors = F, sep = ";")
m_hist <- mutate(municipios_esgoto_agua_hist, taxa_esgoto = esgoto/populacao, taxa_agua = agua/populacao)
m_hist <- m_hist %>% select(id, nome, ano, agua, esgoto, populacao)
write.table(m, file = "taxas.csv", sep = ",", col.names = T, quote = T, fileEncoding = "UTF-8")
idsIndexes <- which(names(m_hist) != 'id' & names(m_hist) != 'nome')
a <- lapply(1:nrow(m_hist),FUN=function(i){
list(municipio=list(id=m_hist[i,'id'], nome=m_hist[i, 'nome']),
valores=lapply(idsIndexes,
FUN=function(j)list(ano=m_hist[i,'ano'], agua=m_hist[i,'agua'], esgoto=m_hist[i,'esgoto'], populacao=m_hist[i,'populacao'])))
})
# serialize to json
txt <- toJSON(a)
# if you want, indent the json
txt <- prettify(txt)
txt
?jsonlite
txt <- toJSON(a)
txt
txt <- prettify(txt)
write(txt, "municipios_hist.json")
m_hist <- mutate(municipios_esgoto_agua_hist, taxa_esgoto = esgoto/populacao, taxa_agua = agua/populacao)
m_hist <- m_hist %>% select(id, nome, ano, agua, esgoto, populacao, taxa_esgoto, taxa_agua)
# transform the data.frame into the described structure
idsIndexes <- which(names(m_hist) != 'id' & names(m_hist) != 'nome')
a <- lapply(1:nrow(m_hist),FUN=function(i){
list(municipio=list(id=m_hist[i,'id'], nome=m_hist[i, 'nome']),
valores=lapply(idsIndexes,
FUN=function(j)list(ano=m_hist[i,'ano'], agua=m_hist[i,'agua'], esgoto=m_hist[i,'esgoto'], populacao=m_hist[i,'populacao'], taxa_agua=m_hist[i,'taxa_agua'], taxa_esgoto=m_hist[i,'taxa_esgoto'])))
})
# serialize to json
txt <- toJSON(a)
# if you want, indent the json
txt <- prettify(txt)
txt
write(txt, "municipios_hist.json")
setwd("C:/Users/tatiana/valei-me-sao-francisco/scripts")
mun <- read.csv("../arcgis/AguaEsgotoHabitantesConsolidadosHistorico.csv", header = T, encoding = "UTF-8", stringsAsFactors = F, sep = ";")
View(mun)
mun <- read.csv("../arcgis/AguaEsgotoHabitantesConsolidadosHistorico.csv", header = T, encoding = "UTF-8", stringsAsFactors = F, sep = ";")
View(mun)
beneficiados <- read.csv("../arcgis/municipios_beneficiados.csv", header = T, encoding = "UTF-8", stringsAsFactors = F, sep = ";")
join <- inner_join(mun, beneficiados, by = c("municipio" = "nome"))
View(beneficiados)
beneficiados <- read.csv("../arcgis/municipios_beneficiados.csv", header = T, encoding = "UTF-8", stringsAsFactors = F, sep = ",")
join <- inner_join(mun, beneficiados, by = c("municipio" = "nome"))
View(join)
join <- right_join(mun, beneficiados, by = c("municipio" = "nome"))
join <- right_join(mun, beneficiados, by = c("municipio" = "nome"))
join <- left_join(beneficiados, mun, by = c("nome" = "municipio"))
library(dplyr)
mun <- read.csv("../arcgis/AguaEsgotoHabitantesConsolidadosHistorico.csv", header = T, encoding = "UTF-8", stringsAsFactors = F, sep = ";")
beneficiados <- read.csv("../arcgis/municipios_beneficiados.csv", header = T, encoding = "UTF-8", stringsAsFactors = F, sep = ",")
join <- left_join(beneficiados, mun, by = c("nome" = "municipio"))
View(mun)
join <- right_join(beneficiados, mun, by = c("nome" = "municipio"))
View(join)
join <- left_join(beneficiados, mun, by = c("nome" = "municipio"))
View(join)
join <- join %<% select(FID, nome, uf.x, codigo_ibg, codigo_mun, populacao.x, agua.x, esgoto.x, ano.y)
join <- join %>% select(FID, nome, uf.x, codigo_ibg, codigo_mun, populacao.x, agua.x, esgoto.x, ano.y)
View(join)
names <- c("id", "nome", "uf", "codigo_ibg", "codigo_mun", "populacao", "agua", "esgoto", "ano")
m_hist <- colnames(join, names)
colnames(join) <- names
View(join)
join <- left_join(beneficiados, mun, by = c("nome" = "municipio"))
join <- join %>% select(FID, nome, uf.x, codigo_ibg, codigo_mun, populacao.x, agua.x, esgoto.x, ano.y)
names <- c("id", "nome", "uf", "codigo_ibg", "codigo_mun", "populacao", "agua", "esgoto", "ano")
colnames(join) <- names
m_hist <- mutate(join, taxa_esgoto = esgoto/populacao, taxa_agua = agua/populacao)
View(m_hist)
library(jsonlite)
# transform the data.frame into the described structure
idsIndexes <- which(names(m_hist) != 'id' & names(m_hist) != 'nome')
a <- lapply(1:nrow(m_hist),FUN=function(i){
list(municipio=list(id=m_hist[i,'id'], nome=m_hist[i, 'nome']),
valores=lapply(idsIndexes,
FUN=function(j)list(ano=m_hist[i,'ano'], agua=m_hist[i,'agua'], esgoto=m_hist[i,'esgoto'], populacao=m_hist[i,'populacao'], taxa_agua=m_hist[i,'taxa_agua'], taxa_esgoto=m_hist[i,'taxa_esgoto'])))
})
# serialize to json
txt <- toJSON(a)
# if you want, indent the json
txt <- prettify(txt)
write(txt, "municipios_hist.json")
